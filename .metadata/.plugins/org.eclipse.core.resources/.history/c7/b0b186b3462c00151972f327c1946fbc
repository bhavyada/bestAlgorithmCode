/*
 ============================================================================
 Name        : Display_nodes_by_three.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>

struct Node{
	int value;
	struct Node* Next;
};

//void reverse(struct Node* head)
//{
//	if (head == NULL || head->Next == NULL)
//	{
//		return;
//	}
//	if(head->Next->Next != NULL)
//	{
//		reverse(head->Next->Next->Next);
//	}
//	printf(" %d ",head->value);
//}

void reverse_linked_list(struct Node** head)
{
	struct Node* prev = NULL;
	struct Node* current = *head;
	struct Node* Next;
	while(current != NULL)
	{
		Next = current->Next;
		current->Next = prev;
		prev = current;
		current = Next;
	}
	*head = prev;
}



void reverse_print(struct Node* head)
{
	struct Node* current = head;
	//printf("%d ",current->value);
	while(current!= NULL || current->Next != NULL || current->Next->Next != NULL)
	{
		printf(" %d ",current->value);
		current = current->Next->Next->Next;
	}
}

int main(void) {
	struct Node* node10 = (struct Node *)malloc(sizeof(struct Node));
	node10->value = 10;
	node10->Next = NULL;
	struct Node* node09 = (struct Node *)malloc(sizeof(struct Node));
	node09->value = 9;
	node09->Next = node10;
	struct Node* node08 = (struct Node *)malloc(sizeof(struct Node));
	node08->value = 8;
	node08->Next = node09;
	struct Node* node07 = (struct Node *)malloc(sizeof(struct Node));
	node07->value = 7;
	node07->Next = node08;
	struct Node* node06 = (struct Node *)malloc(sizeof(struct Node));
	node06->value = 6;
	node06->Next = node07;

	struct Node* node05 = (struct Node *)malloc(sizeof(struct Node));
	node05->value = 5;
	node05->Next = node06;
	struct Node* node04 = (struct Node *)malloc(sizeof(struct Node));
	node04->value = 4;
	node04->Next = node05;
	struct Node* node03 = (struct Node *)malloc(sizeof(struct Node));
	node03->value = 3;
	node03->Next = node04;
	struct Node* node02 = (struct Node *)malloc(sizeof(struct Node));
	node02->value = 2;
	node02->Next = node03;
	struct Node* node01 = (struct Node *)malloc(sizeof(struct Node));
	node01->value = 1;
	node01->Next = node02;
	struct Node* head1 = node01;
	reverse_linked_list(head1);
	reverse_print(head1);
	return 0;
}
